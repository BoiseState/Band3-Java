/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * BandViewDielectrics.java
 *
 * Created on Jan 21, 2010, 9:13:51 PM
 */

package band;

import java.awt.Color;
import java.awt.event.*;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.util.*;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import javax.swing.*;
import javax.swing.AbstractAction;
import javax.swing.GroupLayout;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import javax.swing.LayoutStyle;
//import org.jdesktop.application.Action;
import org.jdesktop.beansbinding.*;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.observablecollections.ObservableCollections;
import org.jdesktop.observablecollections.ObservableList;
import org.jdesktop.swingbinding.*;

/**
 *
 * @author mbaker
 */
public class BandViewMetals extends javax.swing.JDialog {

   
   protected ObservableList<Material> listMetal = ObservableCollections.observableList(BandApp.getApplication().getListMetal());
   public static final String PROP_LISTMETAL = "listMetal";

   /** Creates new form BandViewDielectrics */
    public BandViewMetals(java.awt.Frame parent, boolean modal) {
        super(parent, modal);

        InputMap iMap = getRootPane().getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
        iMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), "escape");
        iMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0), "enter");

        getRootPane().getActionMap().put("escape", new AbstractAction() {
           @Override
           public void actionPerformed(ActionEvent e) {
              dispose();
           }
        });

        getRootPane().getActionMap().put("enter", new AbstractAction() {
           @Override
           public void actionPerformed(ActionEvent e) {
              dispose();
           }
        });

        initComponents();
    }

    public List<Material> getMetals() {
       return listMetal;
    }

//    @Action
    public void closeMetalsBox() {
       dispose();
    }

    public void showMaterialMetal() {
       BandMetal metalBox = null;
       JFrame mainFrame = BandApp.getApplication();
       metalBox = new BandMetal(mainFrame,true);
       metalBox.setLocationRelativeTo(this);
       
       BandApp.getApplication().show(metalBox);
    }

//    @Action
    public void newRecord() {
       BandMetal metalBox = null;
       Metal newMetal = new Metal();
       newMetal.fillColor = Color.BLACK;

       JFrame mainFrame = BandApp.getApplication();
       metalBox = new BandMetal(mainFrame,true);
       metalBox.setLocationRelativeTo(this);

       metalBox.setCurrentRecord(newMetal);
       metalBox.setVisible(true);

       if (metalBox.isConfirmed()) {
          listMetal.add(newMetal);
       }
       
       Collections.sort(listMetal);
    }
    
//    @Action
    public void editRecord() {
       int selectedRow = jTableMetals.getSelectedRow();

       BandMetal metalBox = null;
       
       JFrame mainFrame = BandApp.getApplication();
       metalBox = new BandMetal(mainFrame,true);
       metalBox.setLocationRelativeTo(this);
       
       Metal tempMetal = (Metal)listMetal.get(selectedRow);
       metalBox.setCurrentRecord((Metal)listMetal.get(selectedRow));
       metalBox.setVisible(true);

       if (!metalBox.isConfirmed()) {
          listMetal.remove(selectedRow);
          listMetal.add(selectedRow, tempMetal);
       }
       
       Collections.sort(listMetal);
    }

//    @Action
    public void deleteRecord() {
        int n = JOptionPane.showConfirmDialog(null, "Delete the records permanently?", "Warning",
                JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE, null);
        if (n == JOptionPane.YES_OPTION) {
            int[] selected = jTableMetals.getSelectedRows();
            List<Metal> toRemove = new ArrayList<Metal>(selected.length);
            for (int idx = 0; idx < selected.length; idx++) {
                Metal g = (Metal)listMetal.get(jTableMetals.convertRowIndexToModel(selected[idx]));
                toRemove.add(g);
            }
            listMetal.removeAll(toRemove);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   // Generated using JFormDesigner Educational license - Madi Thompson (madithompson)
   private void initComponents() {
       ResourceBundle bundle = ResourceBundle.getBundle("band.resources.BandViewMetals");
       jButtonAdd = new JButton();
       jButtonEdit = new JButton();
       jButtonDelete = new JButton();
       jButtonClose = new JButton();
       jScrollPane1 = new JScrollPane();
       jTableMetals = new JTable();

       //======== this ========
       setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
       setTitle(bundle.getString("BandViewMetals.title"));
       setName("BandViewMetals");
       var contentPane = getContentPane();

       //---- jButtonAdd ----
       jButtonAdd.setText(bundle.getString("jButtonAdd.text"));
       jButtonAdd.setName("jButtonAdd");

       //---- jButtonEdit ----
       jButtonEdit.setText(bundle.getString("jButtonEdit.text"));
       jButtonEdit.setName("jButtonEdit");

       //---- jButtonDelete ----
       jButtonDelete.setText(bundle.getString("jButtonDelete.text"));
       jButtonDelete.setName("jButtonDelete");

       //---- jButtonClose ----
       jButtonClose.setText(bundle.getString("jButtonClose.text"));
       jButtonClose.setName("jButtonClose");

       //======== jScrollPane1 ========
       {
	   jScrollPane1.setName("jScrollPane1");

	   //---- jTableMetals ----
	   jTableMetals.setName("jTableMetals");
	   jTableMetals.addMouseListener(new MouseAdapter() {
	       @Override
	       public void mouseClicked(MouseEvent e) {
		   jTableMetalsMouseClicked(e);
	       }
	   });
	   jScrollPane1.setViewportView(jTableMetals);
       }

       GroupLayout contentPaneLayout = new GroupLayout(contentPane);
       contentPane.setLayout(contentPaneLayout);
       contentPaneLayout.setHorizontalGroup(
	   contentPaneLayout.createParallelGroup()
	       .addGroup(contentPaneLayout.createSequentialGroup()
		   .addContainerGap()
		   .addGroup(contentPaneLayout.createParallelGroup()
		       .addComponent(jButtonAdd)
		       .addComponent(jButtonEdit)
		       .addComponent(jButtonDelete)
		       .addComponent(jButtonClose))
		   .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
		   .addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 402, Short.MAX_VALUE)
		   .addContainerGap())
       );
       contentPaneLayout.setVerticalGroup(
	   contentPaneLayout.createParallelGroup()
	       .addGroup(GroupLayout.Alignment.TRAILING, contentPaneLayout.createSequentialGroup()
		   .addContainerGap()
		   .addGroup(contentPaneLayout.createParallelGroup(GroupLayout.Alignment.TRAILING)
		       .addComponent(jScrollPane1, GroupLayout.Alignment.LEADING, GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
		       .addGroup(contentPaneLayout.createSequentialGroup()
			   .addComponent(jButtonAdd)
			   .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
			   .addComponent(jButtonEdit)
			   .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
			   .addComponent(jButtonDelete)
			   .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 112, Short.MAX_VALUE)
			   .addComponent(jButtonClose)))
		   .addContainerGap())
       );
       pack();
       setLocationRelativeTo(getOwner());

       //---- bindings ----
       bindingGroup = new BindingGroup();
       {
	   var binding = SwingBindings.createJTableBinding(UpdateStrategy.READ_WRITE,
	       this, (ELProperty) ELProperty.create("${metals}"), jTableMetals);
	   binding.addColumnBinding(ELProperty.create("${name}"))
	       .setColumnName("Name")
	       .setColumnClass(String.class)
	       .setEditable(false);
	   binding.addColumnBinding(ELProperty.create("${workFunction}"))
	       .setColumnName("Work Function")
	       .setColumnClass(Double.class)
	       .setEditable(false);
	   binding.addColumnBinding(ELProperty.create("${notes}"))
	       .setColumnName("Notes")
	       .setColumnClass(String.class)
	       .setEditable(false);
	   bindingGroup.addBinding(binding);
	   binding.bind();
       }
       bindingGroup.bind();
   }// </editor-fold>//GEN-END:initComponents

    private void jTableMetalsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMetalsMouseClicked
      if (evt.getClickCount() == 2) {
         editRecord();
      }
    }//GEN-LAST:event_jTableMetalsMouseClicked

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                BandViewMetals dialog = new BandViewMetals(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

   // Variables declaration - do not modify//GEN-BEGIN:variables
   // Generated using JFormDesigner Educational license - Madi Thompson (madithompson)
   private JButton jButtonAdd;
   private JButton jButtonEdit;
   private JButton jButtonDelete;
   private JButton jButtonClose;
   private JScrollPane jScrollPane1;
   private JTable jTableMetals;
   private BindingGroup bindingGroup;
   // End of variables declaration//GEN-END:variables
}
